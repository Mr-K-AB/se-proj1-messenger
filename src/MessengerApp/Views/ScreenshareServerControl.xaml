<!-- Author = Harsh Kanani -->

<UserControl x:Class="MessengerApp.Views.ScreenshareServerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MessengerApp.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <!-- Here we have created the grid and divided them into 2 rows 1 for the main content and other for the title -->
    <Grid Background="#FFD9D9D9">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="8*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="#FF005375"/>
        <Grid Grid.Row="1" Background="#FFD9D9D9"/>

        <!-- Used viewbox for the title so that the size changes depending on the window size -->
        <Viewbox>
            <TextBlock Grid.Row="0" HorizontalAlignment="Center" TextAlignment="Center" FontSize="40" FontWeight="Bold" Background="#FF005375" TextWrapping="Wrap" Width="800" VerticalAlignment="Top" FontFamily="Reem Kufi" Foreground="White"><Run Language="en-in" Text="SCREEN SHARE"/></TextBlock>
        </Viewbox>

        <!-- Popup that shows up when someone joins -->
        <StackPanel Grid.Row="0" Name ="Popupone" HorizontalAlignment="Right" VerticalAlignment="Bottom">
            
            <Popup IsOpen="{Binding IsPopupOpen, Mode=TwoWay}" PlacementTarget="{Binding ElementName=Popupone}" AllowsTransparency="True" 
       PopupAnimation="Fade" VerticalOffset="-46" StaysOpen="False">
                
                <TextBox Text="{Binding PopupText, Mode=OneWay}" Background="#212024" TextAlignment="Center" Padding="20,10,20,10" BorderThickness="2.3" 
             Foreground="GhostWhite" FontFamily="Verdana" FontSize="15" Opacity="0.7">
                    
                    <!-- Design of the Textbox -->
                    <TextBox.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5,5,5,5"/>
                        </Style>
                    </TextBox.Resources>
                    
                </TextBox>
            </Popup>
        </StackPanel>


        <!-- Create a stack panel which consist of an image and textblock for the screen when no client is sharing screen -->
        <StackPanel Orientation="Vertical" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">

            <!-- Image -->
            <Image Width="377" Height="165" Source="../ScreenshareIcons/NotSharedScreenBackground.png" Margin="20"/>

            <!-- Textblock -->
            <TextBlock
                x:Name="MainText"
                HorizontalAlignment="Center"
                FontFamily="Segoe UI Semibold"
                FontSize="32"
                Foreground="#FF005375"
                Text="No one is sharing the screen"
                TextAlignment="Center"
                TextWrapping="WrapWithOverflow" />

            <!-- Keep this StackPanel hidden and only show when there are no clients -->
            <StackPanel.Resources>
                <Style TargetType="{x:Type StackPanel}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding = "{Binding CurrentClients.Count, Mode=OneWay}" Value = "0">
                            <Setter Property = "Visibility" Value = "Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>

        </StackPanel>

        <!-- Make a stack panel to show the tiles of clients -->
        <ScrollViewer Grid.Row="1" Margin="4,5,4,5">

            <!-- Make an ItemsControl that will display every picture in the window client list that is now open. -->
            <ItemsControl x:Name ="Items" ItemsSource="{Binding CurrentClients, Mode=OneWay}">

                <!-- This panel will be used to hold the items -->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!-- Indicate how many rows and columns the grid should have. -->
                        <UniformGrid Rows="{Binding CurrentRows, Mode=OneWay}" Columns="{Binding CurrentColumns, Mode=OneWay}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <!-- This template will be used to draw each item. -->
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <!-- Main Grid which will show the shared screens -->
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="{Binding TileWidth, Mode=OneWay}" Height="{Binding TileHeight, Mode=OneWay}" Margin="5,3,5,3">

                                <!-- Shared Screen -->
                                <Image Source="{Binding CurrentImage, Mode=OneWay}" Stretch="Uniform"/>
                                

                                <!-- Pin Button -->
                                <Button CommandParameter="{Binding Id, Mode=OneWay}" Width="50" Height="50" Click="OnPinButtonClicked"
                                    ToolTip="Pin User" BorderThickness="0" Cursor="Hand" Opacity="0.7">

                                    <!-- Icon for the Pin Button -->
                                    <Image Source="../ScreenshareIcons/PinButton.png" Height="23" Width="23" Margin="0,3,0,0"/>

                                    <!-- This button will appear only when mouse hovers over it and the client is not already pinned -->
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="Background" Value="#3C4043"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}},Path=IsMouseOver}" Value="True" />
                                                        <Condition Binding="{Binding Pinned,Mode=OneWay}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        
                                        <!-- Make the button rounded -->
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="50"/>
                                        </Style>
                                    </Button.Resources>
                                </Button>

                                <!-- UnPin button -->
                                <Button Width="50" Height="50" Opacity="0.7" HorizontalAlignment="Center" Cursor="Hand" 
                                    Click="OnUnpinButtonClicked" ToolTip="Unpin User" BorderThickness="0" CommandParameter ="{Binding Id, Mode=OneWay}">

                                    <!-- Icon for the UnPin button -->
                                    <Image Source="../ScreenshareIcons/UnpinButton.png" Width="25" Height="25"/>

                                    <!-- This button will appear only when mouse hovers over it and the client is not already pinned -->
                                    <Button.Resources>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Setter Property="Background" Value="#3C4043"/>
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Grid}},Path=IsMouseOver}" Value="True" />
                                                        <Condition Binding="{Binding Pinned,Mode=OneWay}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                        
                                        <!-- Make the button rounded -->
                                        <Style TargetType="Border">
                                            <Setter Property="CornerRadius" Value="50"/>
                                        </Style>
                                    </Button.Resources>
                                </Button>

                                <!-- Make a textblock to display the client's name at the tile's bottom. -->
                                <TextBlock Text="{Binding Name, Mode=OneWay}" Foreground="AntiqueWhite" FontWeight="SemiBold" Background="Transparent" 
                                       VerticalAlignment="Bottom" Margin="15,0,0,7" FontSize="12"/>

                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid >
</UserControl>
